Tricky Cases
==============

Argument for needing automatic relationship consistency (like CoreData):
------------------------------------------------------------------------

- We want to support one-to-one or one-to-many relationships, like parent/child(ren)
where each child can have only one parent.
- We also want to support per-object undo (or undo on a group of objects/
history track), and selective undo.

- Suppose an object C was once a child of B, but was removed and put in A.
- Suppose the change that removed C from B is undone (either selectively, or
by using per-object linear undo)
_ Without automatic relationship consistency, our object graph will be 
corruped because both A and B will contain C, but C's parent pointer will point 
to B.
_ With automatic relationship consistency, it isn't a problem, C will correctly
move back to B.