{"name":"CoreObject","tagline":"Distributed version control + object persistence framework ","body":"CoreObject\r\n==========\r\n\r\nMaintainers\r\n: Eric Wasylishen, Quentin Mathe\r\nAuthors\r\n: Eric Wasylishen <ewasylishen@gmail.com>, Quentin Mathe <quentin.mathe@gmail.com>, Christopher Armstrong <carmstrong@fastmail.com.au>\r\nLicense\r\n: MIT License\r\nVersion\r\n: 0.5\r\n\r\n\r\nCoreObject is a version-controlled object database, designed to be a humane\r\npersistence layer for applications with a \"never lose any work\" philosophy.\r\n\r\nAt the center is an ACID-compliant object store using SQLite, and built on this are\r\nsemantic merging, rich undo/redo support, collaborative editing, and a\r\ntransaction API for viewing database snapshots in memory and batching changes for commit.\r\n\r\n\r\n[![Build Status](https://travis-ci.org/etoile/CoreObject.png?branch=master)](https://travis-ci.org/etoile/CoreObject)\r\n\r\n\r\nKey Features\r\n------------\r\n\r\n- Revision Control\t\r\n\r\n\t- Built on a DVCS (distributed version control system) model\r\n\t- Persistent roots have isolated history\r\n\t\t- Comparable to separate Git repositories\r\n\t- Based on Object Graph Diff and Merging Model\r\n\t\t- Each Change is a delta represented as an Object Graph Patch\r\n\t- Two-level History\r\n\t\t- History Graph per document\r\n\t\t- Undo Track per activity\r\n\t- Branch\r\n\t- Cheap Copy (copying a document requires O(1) space)\r\n\t- Localizable History\r\n\t- History Compression and Compaction // Not finished!\r\n\t- Serialization Formats\r\n\t\t- JSON and Binary (endian-, 32/64-bit- independent)\r\n\t\t- Stable over multiple invocations for the same object graph (no merge issues in SCM)\r\n\t\t- Integrity Checking (every single committed change includes a checksum)\r\n\r\n\r\n- Undo Framework\r\n\r\n\t- Built on the Revision Control model\r\n\t\t- Never need to define new Command objects\r\n\t- Pervasive Undo/Redo\r\n\t\t- Document Changes (Creation, Update and Deletion inside a Document)\r\n\t\t- Store Changes (Document/Branch Creation, Update and Deletion)\r\n\t- Selective Undo (each change can be cancelled individually)\r\n\t- Persistent Undo Stacks\r\n\t\t- Mutiple Undo Views on the same document\r\n\t\t- Undo Stack Union View\r\n\r\n\r\n- Object Store\r\n\r\n\t- Pragmatic OODB atop SQLite\r\n\t- Minimalistic Metamodel\r\n\t- Flexible Storage Model \r\n\t\t- Coarse-grained Objects with Metadata (e.g. Documents and their Branches)\r\n\t\t- Fine-grained Objects (e.g. inside Document Branches)\r\n\t\t- Optional Object Organization Model based on Tags and Libraries\r\n\t\t- Built-in Indexing and Search (history included)\r\n\t- Flexible Collection and Relationship Model\r\n\t\t- Unidirectional or bidirectional\r\n\t\t\t- Ordered or unordered\r\n\t\t\t- To-one or to-many\r\n\t\t\t- Composite\r\n\t\t- Undirectional Unordered Keyed\r\n\t\t- Transparent Constraint Enforcements on Update\r\n\t- Cross Document References\r\n\t\t- named branch\r\n\t\t- current branch\r\n\t\t- unidirectional accross arbitrary branch\r\n\t\t- bidirectional between the current branches\r\n\t- Synthesized Accessors\r\n\t- Transparent Object Graph Copy\r\n\t- Transient Object Graph\r\n\r\n- Real-Time Collaboration\r\n\r\n\t- Any CoreObject-based model supports it (for free)\r\n\t- Based on the Revision Control Model\r\n\t- Very Fast\r\n\t- Full Branch and Undo Support per User\r\n\t\t- Per User Persistent Undo Stack\r\n\t\t- Per User Selective Undo\r\n\t- Based on XMPP\r\n\r\n- Overall Design\r\n\r\n\t- Small Code Base (~ 20 000 loc)\r\n\t- Pretty Large Test suite (over 3000 tests)\r\n\t- High Quality API documentation\r\n\t- Good Debugging Support \r\n\t\t - View object graph in memory as PDF diagram (can be generated from the debugger or in code)\r\n\t\t - Short and Detailed Descriptions for logging objects\r\n\t- Minimal dependencies (SQLite and EtoileFoundation)\r\n\t- Pervasive UUID use (no string, number or content-based identifiers)\r\n\t- Favor JSON formats\r\n\t- Create a Persistent Object and save it in 3 loc\r\n\r\n\t\t\tCOEditingContext *ctx = [COEditingContext contextWithURL: [NSURL fileURLWithPath: @\"TestStore.db\"]];\r\n\t\t\tCOPersistentRoot *persistentRoot = [ctx insertNewPersistentRootWithEntityName: @\"COObject\"];\r\n\t\t\t[persistentRoot commit];\r\n\r\n\r\nBuild and Install\r\n-----------------\r\n\r\nRead INSTALL.Cocoa or INSTALL.GNUstep documents.\r\n\r\n\r\nMac OS X support\r\n----------------\r\n\r\nCoreObject is supported on Mac OS X (10.7 or higher), and iOS support is coming soon.\r\n\r\nAn Xcode project is bundled to build CoreObject on Mac OS X. \r\n\r\nAnother Xcode project to build the CoreObject demo application can be found in Samples/ProjectDemo.\r\n\r\n**Warning:** Xcode 4.6 or higher is required to build these projects.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}